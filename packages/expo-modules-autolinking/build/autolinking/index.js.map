{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/autolinking/index.ts"],"names":[],"mappings":";;;AACA,+CAAiD;AAIxC,iGAJA,8BAAgB,OAIA;AAHzB,+DAA0F;AAG/D,yGAHlB,8CAAwB,OAGkB;AAAuB,wGAHvC,6CAAuB,OAGuC;AAFjG,qDAAuD;AAEF,oGAF5C,oCAAmB,OAE4C;AACxE,6DAAiE;AAAxD,+HAAA,wBAAwB,OAAA;AACjC,6DAA4D;AAAnD,0HAAA,mBAAmB,OAAA;AAE5B;;GAEG;AACI,KAAK,UAAU,iBAAiB,CAAC,QAA2B;IACjE,MAAM,OAAO,GAAG,MAAM,IAAA,8CAAwB,EAAC,EAAE,QAAQ,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC;IAC9E,MAAM,aAAa,GAAG,MAAM,IAAA,8BAAgB,EAAC,OAAO,CAAC,CAAC;IACtD,OAAO,MAAM,IAAA,oCAAmB,EAAC,aAAa,EAAE,OAAO,CAAC,CAAC;AAC3D,CAAC;AAJD,8CAIC","sourcesContent":["import type { ModuleDescriptor, SupportedPlatform } from '../types';\nimport { findModulesAsync } from './findModules';\nimport { mergeLinkingOptionsAsync, resolveSearchPathsAsync } from './mergeLinkingOptions';\nimport { resolveModulesAsync } from './resolveModules';\n\nexport { findModulesAsync, mergeLinkingOptionsAsync, resolveModulesAsync, resolveSearchPathsAsync };\nexport { generatePackageListAsync } from './generatePackageList';\nexport { verifySearchResults } from './verifySearchResults';\n\n/**\n * Programmatic API to serve autolinked modules for Expo CLI.\n */\nexport async function queryModulesAsync(platform: SupportedPlatform): Promise<ModuleDescriptor[]> {\n  const options = await mergeLinkingOptionsAsync({ platform, searchPaths: [] });\n  const searchResults = await findModulesAsync(options);\n  return await resolveModulesAsync(searchResults, options);\n}\n"]}